/usr/bin/python /Users/sahara/PycharmProjects/Kmeans/testKmeans.py
初始化数组
afkmc2
中心点 seeding
[array([  1.,   4.,   3.,   5.,   1.,   9.,   2.,  11.,   1.,   1.,   0.]), array([  1.,   8.,   3.,   9.,   3.,   3.,   1.,  10.,   1.,  12.,   0.]), array([  2.,  13.,   4.,  10.,   3.,   5.,   2.,   1.,   4.,   3.,   0.]), array([  4.,   6.,   4.,  11.,   2.,  13.,   3.,  10.,   3.,  12.,   0.]), array([  4.,  10.,   2.,   9.,   2.,   5.,   4.,  11.,   1.,   1.,   0.]), array([ 1.,  7.,  1.,  3.,  3.,  4.,  4.,  9.,  3.,  9.,  1.]), array([  3.,   1.,   1.,   4.,   3.,   5.,   1.,   7.,   4.,  12.,   0.])]
将numpy 数组 转化为 多维空间 point
开始 Kmeans
划定聚类中心
开始迭代
[  1.   4.   3.   5.   1.   9.   2.  11.   1.   1.   0.]
[  1.   8.   3.   9.   3.   3.   1.  10.   1.  12.   0.]
[  2.  13.   4.  10.   3.   5.   2.   1.   4.   3.   0.]
[  4.   6.   4.  11.   2.  13.   3.  10.   3.  12.   0.]
[  4.  10.   2.   9.   2.   5.   4.  11.   1.   1.   0.]
[ 1.  7.  1.  3.  3.  4.  4.  9.  3.  9.  1.]
[  3.   1.   1.   4.   3.   5.   1.   7.   4.  12.   0.]
kmc2
中心点 seeding
[array([  4.,   9.,   2.,  13.,   2.,  11.,   4.,  11.,   2.,   9.,   2.]), array([  1.,   5.,   2.,   1.,   1.,   9.,   4.,   1.,   4.,  10.,   1.]), array([ 4.,  6.,  2.,  4.,  3.,  8.,  4.,  3.,  2.,  7.,  0.]), array([  2.,  12.,   3.,   7.,   2.,   3.,   1.,  13.,   4.,   1.,   0.]), array([  1.,   1.,   3.,   1.,   4.,   5.,   4.,  10.,   1.,  12.,   1.]), array([  4.,   3.,   3.,  11.,   4.,   4.,   3.,   2.,   1.,  12.,   0.]), array([  1.,   3.,   3.,   5.,   1.,  10.,   3.,  12.,   1.,   8.,   0.])]
将numpy 数组 转化为 多维空间 point
开始 Kmeans
划定聚类中心
开始迭代
[  4.   9.   2.  13.   2.  11.   4.  11.   2.   9.   2.]
[  1.   5.   2.   1.   1.   9.   4.   1.   4.  10.   1.]
[ 4.  6.  2.  4.  3.  8.  4.  3.  2.  7.  0.]
[  2.  12.   3.   7.   2.   3.   1.  13.   4.   1.   0.]
[  1.   1.   3.   1.   4.   5.   4.  10.   1.  12.   1.]
[  4.   3.   3.  11.   4.   4.   3.   2.   1.  12.   0.]
[  1.   3.   3.   5.   1.  10.   3.  12.   1.   8.   0.]
kpp
中心点 seeding
[array([  2.,  11.,   2.,   6.,   2.,   4.,   4.,   9.,   2.,   9.,   1.]), array([  4.,   7.,   2.,   8.,   1.,  11.,   3.,   2.,   1.,   2.,   1.]), array([  4.,  12.,   4.,   8.,   1.,   6.,   4.,   4.,   3.,  13.,   0.]), array([  2.,   4.,   3.,  12.,   3.,   3.,   2.,   6.,   2.,   7.,   0.]), array([  4.,   7.,   3.,  13.,   1.,  11.,   1.,   6.,   1.,   7.,   1.]), array([  1.,   1.,   1.,   3.,   4.,  11.,   2.,  11.,   4.,  12.,   1.]), array([  2.,  13.,   1.,  12.,   4.,  13.,   1.,   6.,   1.,   4.,   1.])]
将numpy 数组 转化为 多维空间 point
开始 Kmeans
划定聚类中心
开始迭代
[  2.  11.   2.   6.   2.   4.   4.   9.   2.   9.   1.]
[  4.   7.   2.   8.   1.  11.   3.   2.   1.   2.   1.]
[  4.  12.   4.   8.   1.   6.   4.   4.   3.  13.   0.]
[  2.   4.   3.  12.   3.   3.   2.   6.   2.   7.   0.]
[  4.   7.   3.  13.   1.  11.   1.   6.   1.   7.   1.]
[  1.   1.   1.   3.   4.  11.   2.  11.   4.  12.   1.]
[  2.  13.   1.  12.   4.  13.   1.   6.   1.   4.   1.]
afkmc2_with_weight
kpp
中心点 seeding
[array([  1.,  13.,   2.,  10.,   2.,  12.,   1.,   8.,   2.,  11.,   0.]), array([  3.,  12.,   4.,   2.,   1.,   5.,   1.,  13.,   2.,  11.,   0.]), array([  1.,   1.,   3.,  13.,   2.,   4.,   2.,  13.,   1.,  12.,   1.]), array([  3.,   6.,   3.,   1.,   2.,  13.,   4.,   7.,   3.,   5.,   0.]), array([  1.,   5.,   3.,   6.,   2.,   9.,   1.,  13.,   2.,   6.,   1.]), array([  4.,   8.,   4.,  10.,   3.,   7.,   1.,  12.,   1.,   8.,   1.]), array([  3.,  10.,   4.,  10.,   1.,   1.,   1.,   9.,   2.,  10.,   3.])]
将numpy 数组 转化为 多维空间 point
开始 Kmeans
划定聚类中心
开始迭代
一次迭代开始 count=1
changed=5417
lenpts10=24
一次迭代结束
一次迭代开始 count=2
changed=2378
lenpts10=24
一次迭代结束
一次迭代开始 count=3
changed=1106
lenpts10=24
一次迭代结束
一次迭代开始 count=4
changed=569
lenpts10=24
一次迭代结束
一次迭代开始 count=5
changed=351
lenpts10=24
一次迭代结束
一次迭代开始 count=6
changed=317
lenpts10=24
一次迭代结束
一次迭代开始 count=7
changed=363
lenpts10=24
一次迭代结束
一次迭代开始 count=8
changed=335
lenpts10=24
一次迭代结束
一次迭代开始 count=9
changed=300
lenpts10=24
一次迭代结束
一次迭代开始 count=10
changed=282
lenpts10=24
一次迭代结束
一次迭代开始 count=11
changed=256
lenpts10=24
一次迭代结束
一次迭代开始 count=12
changed=236
lenpts10=24
一次迭代结束
一次迭代开始 count=13
changed=266
lenpts10=24
一次迭代结束
一次迭代开始 count=14
changed=256
lenpts10=24
一次迭代结束
一次迭代开始 count=15
changed=280
lenpts10=24
一次迭代结束
一次迭代开始 count=16
changed=292
lenpts10=24
一次迭代结束
一次迭代开始 count=17
changed=302
lenpts10=24
一次迭代结束
一次迭代开始 count=18
changed=305
lenpts10=24
一次迭代结束
一次迭代开始 count=19
changed=291
lenpts10=24
一次迭代结束
一次迭代开始 count=20
changed=298
lenpts10=24
一次迭代结束
[2.5161479741632413, 8.967997651203758, 2.4961832061068701, 10.105402231356431, 2.5023487962419262, 10.379917792131533, 2.4862008220786849, 4.3948913681738109, 2.5041103934233706, 7.7460364063417497, 0.64327657075748679]
[2.4830711810183952, 10.194614769394828, 2.4972007464676085, 4.0461210343908292, 2.5110637163423086, 5.6195681151692884, 2.5099973340442547, 9.2218075179952006, 2.4966675553185818, 9.3740335910423891, 0.60223940282591304]
[2.5597287428273345, 3.6697965571205007, 2.5161711006781431, 9.497652582159624, 2.4838288993218569, 5.3189880020865941, 2.4934793948878458, 7.678403755868545, 2.4702660406885757, 10.174491392801253, 0.55998956703182057]
[2.4821275378896197, 5.7183299971404065, 2.5030025736345438, 3.5684872748069774, 2.5024306548470117, 9.6122390620531881, 2.4915641978839003, 3.5187303402916785, 2.5087217615098658, 7.6525593365742068, 0.59565341721475551]
[2.5145768468723464, 4.0568921596377017, 2.4941975658080953, 4.4327766770450046, 2.5312765355222191, 8.4508915935465616, 2.5097650721766205, 10.023492782337957, 2.5134446645909994, 4.6136427964902351, 0.60628361166147748]
[2.5075222597482347, 8.7801657967454716, 2.501074608535462, 10.244396684065091, 2.5151980350015353, 6.8590727663494011, 2.4700644765121278, 10.347252072459318, 2.510285538839423, 4.052809333742708, 0.62603622965919559]
[2.4959807073954985, 7.815916398713826, 2.4761521972132905, 7.478295819935691, 2.5267952840300105, 3.4263129689174705, 2.5066988210075025, 3.540460878885316, 2.482315112540193, 4.641747052518757, 0.71650589496248662]
min_dist=54.6608456488
中心点 seeding
[array([ 3.,  5.,  3.,  4.,  1.,  8.,  3.,  8.,  2.,  6.,  1.]), array([  2.,   5.,   2.,   4.,   2.,   7.,   3.,  10.,   4.,   3.,   0.]), array([ 3.,  4.,  1.,  6.,  1.,  9.,  2.,  9.,  2.,  4.,  2.]), array([ 3.,  8.,  2.,  6.,  2.,  4.,  1.,  2.,  3.,  6.,  1.]), array([  3.,   5.,   2.,   5.,   3.,   7.,   4.,  11.,   4.,   6.,   1.]), array([  4.,  10.,   1.,   9.,   2.,   8.,   2.,  10.,   3.,   4.,   1.]), array([  2.,   4.,   4.,  11.,   2.,   6.,   4.,   8.,   3.,  11.,   1.])]
将numpy 数组 转化为 多维空间 point
开始 Kmeans
划定聚类中心
开始迭代
[ 3.  5.  3.  4.  1.  8.  3.  8.  2.  6.  1.]
[  2.   5.   2.   4.   2.   7.   3.  10.   4.   3.   0.]
[ 3.  4.  1.  6.  1.  9.  2.  9.  2.  4.  2.]
[ 3.  8.  2.  6.  2.  4.  1.  2.  3.  6.  1.]
[  3.   5.   2.   5.   3.   7.   4.  11.   4.   6.   1.]
[  4.  10.   1.   9.   2.   8.   2.  10.   3.   4.   1.]
[  2.   4.   4.  11.   2.   6.   4.   8.   3.  11.   1.]
error_afkmc2             = 1662954.0    during_afkmc2 = 1.84717512131
error_kmc2               = 1720116.0    during_afkmc2 = 1.77166795731
error_kpp                = 1605418.0    during_kpp = 6.80484700203
error_afkmc2_with_weight = 1470304.0    during_afkmc2_with_weight = 64.8102200031

Process finished with exit code 0
